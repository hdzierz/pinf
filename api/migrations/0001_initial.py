# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import jsonfield.fields
import djorm_pgfulltext.fields
import django_countries.fields


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FormInputLookupFact',
            fields=[
                ('obid', models.AutoField(serialize=False, primary_key=True)),
                ('key', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'form_input_lookup_fact',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FormInputLookupOb',
            fields=[
                ('obid', models.AutoField(serialize=False, primary_key=True)),
                ('form', models.CharField(max_length=255)),
                ('inpt', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'form_input_lookup_ob',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='GenotypeObLg',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('genotypeobserved', models.CharField(default=None, max_length=10, null=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'api_genotypeob_lg',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BioSample',
            fields=[
                ('name', models.CharField(default=b'unknown', max_length=255)),
                ('alias', models.CharField(default=b'unknown', max_length=255)),
                ('description', models.TextField(default=b'')),
                ('obid', models.AutoField(serialize=False, primary_key=True)),
                ('xreflsid', models.CharField(max_length=255)),
                ('createddate', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateTimeField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('typ', models.CharField(max_length=256)),
                ('date', models.DateField()),
                ('count', models.IntegerField(default=1)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BioSequence',
            fields=[
                ('name', models.CharField(default=b'unknown', max_length=255)),
                ('alias', models.CharField(default=b'unknown', max_length=255)),
                ('description', models.TextField(default=b'')),
                ('obid', models.AutoField(serialize=False, primary_key=True)),
                ('xreflsid', models.CharField(max_length=255)),
                ('createddate', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateTimeField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('typ', models.CharField(max_length=256)),
                ('string', models.TextField()),
                ('topology', models.CharField(max_length=32)),
                ('length', models.IntegerField()),
                ('url', models.CharField(max_length=2048)),
                ('comment', models.CharField(max_length=2048)),
                ('gi', models.IntegerField()),
                ('fnindex_accession', models.CharField(max_length=2048)),
                ('fnindex_id', models.CharField(max_length=2048)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BioSubject',
            fields=[
                ('name', models.CharField(default=b'unknown', max_length=255)),
                ('alias', models.CharField(default=b'unknown', max_length=255)),
                ('description', models.TextField(default=b'')),
                ('obid', models.AutoField(serialize=False, primary_key=True)),
                ('xreflsid', models.CharField(max_length=255)),
                ('createddate', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateTimeField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('subjectname', models.CharField(max_length=255)),
                ('subjectspeciesname', models.CharField(max_length=1024)),
                ('subjecttaxon', models.IntegerField(default=None, null=True)),
                ('strain', models.CharField(default=None, max_length=1024, null=True)),
                ('subjectdescription', models.TextField(default=b'')),
                ('dob', models.DateField(default=None, null=True)),
                ('sex', models.CharField(default=None, max_length=1, null=True)),
                ('cohort', models.CharField(default=None, max_length=10, null=True)),
                ('changed', models.BooleanField(default=False)),
                ('comment', models.CharField(default=None, max_length=1024, null=True)),
                ('do_ignore', models.BooleanField(default=False)),
                ('centre', models.CharField(default=None, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('name', models.CharField(default=b'unknown', max_length=255)),
                ('alias', models.CharField(default=b'unknown', max_length=255)),
                ('description', models.TextField(default=b'')),
                ('obid', models.AutoField(serialize=False, primary_key=True)),
                ('xreflsid', models.CharField(max_length=255)),
                ('createddate', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateTimeField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('orig_city_id', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Crew',
            fields=[
                ('name', models.CharField(default=b'unknown', max_length=255)),
                ('alias', models.CharField(default=b'unknown', max_length=255)),
                ('description', models.TextField(default=b'')),
                ('obid', models.AutoField(serialize=False, primary_key=True)),
                ('xreflsid', models.CharField(max_length=255)),
                ('createddate', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateTimeField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('deleted_flag', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=1024)),
                ('typ', models.CharField(default=b'None', max_length=256, null=True)),
                ('supplier', models.CharField(default=b'None', max_length=2048, null=True)),
                ('physicalsourceuri', models.CharField(max_length=2048, null=True)),
                ('supplieddate', models.DateField(auto_now_add=True)),
                ('comment', models.TextField(default=b'none', null=True)),
                ('numberoffiles', models.IntegerField(default=1, null=True)),
                ('uploadsourceuri', models.CharField(default=b'', max_length=2048, null=True)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Diet',
            fields=[
                ('name', models.CharField(default=b'unknown', max_length=255)),
                ('alias', models.CharField(default=b'unknown', max_length=255)),
                ('description', models.TextField(default=b'')),
                ('obid', models.AutoField(serialize=False, primary_key=True)),
                ('xreflsid', models.CharField(max_length=255)),
                ('createddate', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateTimeField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('datasource', models.ForeignKey(default=1, to='api.DataSource')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='EpigeneticsOb',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255)),
                ('xreflsid', models.CharField(max_length=2048)),
                ('createddate', models.DateField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('group', models.CharField(default=b'NA', max_length=1024)),
                ('recordeddate', models.DateField(auto_now_add=True)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('island', models.CharField(default=b'CpG_unkown', max_length=255)),
                ('methylation', models.FloatField(null=True)),
                ('assay', models.CharField(default=b'-9999', max_length=255)),
                ('diet', models.CharField(default=b'', max_length=255)),
                ('lid', models.CharField(default=b'', max_length=255)),
                ('descriptor', models.CharField(default=b'', max_length=255)),
                ('week', models.IntegerField(null=True)),
                ('biosample', models.ForeignKey(to='api.BioSample')),
                ('biosubject', models.ForeignKey(blank=True, to='api.BioSubject', null=True)),
                ('datasource', models.ForeignKey(to='api.DataSource', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='FishOb',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255)),
                ('xreflsid', models.CharField(max_length=2048)),
                ('createddate', models.DateField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('group', models.CharField(default=b'NA', max_length=1024)),
                ('recordeddate', models.DateField(auto_now_add=True)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('form_completed', models.BooleanField()),
                ('values', jsonfield.fields.JSONField()),
                ('city', models.ForeignKey(to='api.City')),
                ('datasource', models.ForeignKey(to='api.DataSource', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Gene',
            fields=[
                ('name', models.CharField(default=b'unknown', max_length=255)),
                ('alias', models.CharField(default=b'unknown', max_length=255)),
                ('description', models.TextField(default=b'')),
                ('obid', models.AutoField(serialize=False, primary_key=True)),
                ('xreflsid', models.CharField(max_length=255)),
                ('createddate', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateTimeField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('datasource', models.ForeignKey(default=1, to='api.DataSource')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Genotype',
            fields=[
                ('name', models.CharField(default=b'unknown', max_length=255)),
                ('alias', models.CharField(default=b'unknown', max_length=255)),
                ('description', models.TextField(default=b'')),
                ('obid', models.AutoField(serialize=False, primary_key=True)),
                ('xreflsid', models.CharField(max_length=255)),
                ('createddate', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateTimeField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('typ', models.CharField(default=b'SNP', max_length=255)),
                ('datasource', models.ForeignKey(default=1, to='api.DataSource')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='GenotypeOb',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255)),
                ('xreflsid', models.CharField(max_length=2048)),
                ('createddate', models.DateField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('group', models.CharField(default=b'NA', max_length=1024)),
                ('recordeddate', models.DateField(auto_now_add=True)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('observationdate', models.DateField(null=True)),
                ('genotypeobserved', models.CharField(default=None, max_length=255, null=True)),
                ('genotypeobserved_comment', models.CharField(default=b'', max_length=1024, null=True)),
                ('finalgenotype', models.CharField(default=None, max_length=255, null=True)),
                ('finalgenotype_comment', models.CharField(default=b'', max_length=1024, null=True)),
                ('biosubject', models.ForeignKey(to='api.BioSubject')),
                ('datasource', models.ForeignKey(to='api.DataSource', null=True)),
                ('genotype', models.ForeignKey(to='api.Genotype')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('name', models.CharField(default=b'unknown', max_length=255)),
                ('alias', models.CharField(default=b'unknown', max_length=255)),
                ('description', models.TextField(default=b'')),
                ('obid', models.AutoField(serialize=False, primary_key=True)),
                ('xreflsid', models.CharField(max_length=255)),
                ('createddate', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateTimeField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('datasource', models.ForeignKey(default=1, to='api.DataSource')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Labresource',
            fields=[
                ('name', models.CharField(default=b'unknown', max_length=255)),
                ('alias', models.CharField(default=b'unknown', max_length=255)),
                ('description', models.TextField(default=b'')),
                ('obid', models.AutoField(serialize=False, primary_key=True)),
                ('xreflsid', models.CharField(max_length=255)),
                ('createddate', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateTimeField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('typ', models.CharField(max_length=256)),
                ('sequence', models.TextField()),
                ('seqlength', models.IntegerField()),
                ('date', models.DateField()),
                ('supplier', models.CharField(max_length=1024)),
                ('datasource', models.ForeignKey(default=1, to='api.DataSource')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MarkerOb',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255)),
                ('xreflsid', models.CharField(max_length=2048)),
                ('createddate', models.DateField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('group', models.CharField(default=b'NA', max_length=1024)),
                ('recordeddate', models.DateField(auto_now_add=True)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('kea_id', models.CharField(max_length=255, db_index=True)),
                ('ebrida_id', models.CharField(max_length=255, db_index=True)),
                ('genotype_id', models.IntegerField(default=0, null=True, blank=True)),
                ('sex', models.CharField(max_length=10, null=True, blank=True)),
                ('values', jsonfield.fields.JSONField()),
                ('datasource', models.ForeignKey(to='api.DataSource', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MouseHistologyOb',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255)),
                ('xreflsid', models.CharField(max_length=2048)),
                ('createddate', models.DateField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('group', models.CharField(default=b'NA', max_length=1024)),
                ('recordeddate', models.DateField(auto_now_add=True)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('descriptor', models.CharField(default=b'', max_length=255)),
                ('week', models.IntegerField(default=0)),
                ('inflam_type', models.CharField(default=b'unknown', max_length=255)),
                ('sub_type', models.CharField(default=b'=unknown', max_length=255)),
                ('score', models.FloatField(default=None, null=True)),
                ('adj_score', models.FloatField(default=None, null=True)),
                ('comments', models.CharField(default=b'', max_length=1024)),
                ('biosample', models.ForeignKey(to='api.BioSample')),
                ('biosubject', models.ForeignKey(blank=True, to='api.BioSubject', null=True)),
                ('datasource', models.ForeignKey(to='api.DataSource', null=True)),
                ('diet', models.ForeignKey(to='api.Diet', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MouseHistologyV2Ob',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255)),
                ('xreflsid', models.CharField(max_length=2048)),
                ('createddate', models.DateField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('group', models.CharField(default=b'NA', max_length=1024)),
                ('recordeddate', models.DateField(auto_now_add=True)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('scorer', models.CharField(default=b'unknown', max_length=20)),
                ('crypt_hyperplasia', models.IntegerField(default=None, null=True)),
                ('aberrant_crypts', models.IntegerField(default=None, null=True)),
                ('crypt_injury', models.IntegerField(default=None, null=True)),
                ('crypt_loss', models.IntegerField(default=None, null=True)),
                ('goblet_cell_loss', models.IntegerField(default=None, null=True)),
                ('crypt_abscess', models.IntegerField(default=None, null=True)),
                ('lymphoid_aggregates', models.IntegerField(default=None, null=True)),
                ('submucosal_thickening', models.IntegerField(default=None, null=True)),
                ('hyperchromatic', models.IntegerField(default=None, null=True)),
                ('surface_loss', models.IntegerField(default=None, null=True)),
                ('monocytes_and_macrophages', models.IntegerField(default=None, null=True)),
                ('neutrophils', models.IntegerField(default=None, null=True)),
                ('plasma_cells_and_lymphocytes', models.IntegerField(default=None, null=True)),
                ('muscular_layer', models.IntegerField(default=None, null=True)),
                ('omental_fat', models.IntegerField(default=None, null=True)),
                ('comments', models.CharField(default=b'', max_length=1024)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MouseIntakeOb',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255)),
                ('xreflsid', models.CharField(max_length=2048)),
                ('createddate', models.DateField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('group', models.CharField(default=b'NA', max_length=1024)),
                ('recordeddate', models.DateField(auto_now_add=True)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('descriptor', models.CharField(default=b'', max_length=255)),
                ('age', models.IntegerField(default=0)),
                ('intake', models.FloatField(default=None, null=True)),
                ('comment', models.CharField(default=b'', max_length=255)),
                ('biosubject', models.ForeignKey(blank=True, to='api.BioSubject', null=True)),
                ('datasource', models.ForeignKey(to='api.DataSource', null=True)),
                ('diet', models.ForeignKey(to='api.Diet', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MouseWeightOb',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255)),
                ('xreflsid', models.CharField(max_length=2048)),
                ('createddate', models.DateField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('group', models.CharField(default=b'NA', max_length=1024)),
                ('recordeddate', models.DateField(auto_now_add=True)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('descriptor', models.CharField(default=b'', max_length=255)),
                ('age', models.IntegerField(default=0)),
                ('weight', models.FloatField(default=None, null=True)),
                ('comment', models.CharField(default=b'', max_length=255)),
                ('biosubject', models.ForeignKey(blank=True, to='api.BioSubject', null=True)),
                ('datasource', models.ForeignKey(to='api.DataSource', null=True)),
                ('diet', models.ForeignKey(to='api.Diet', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Ontology',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=2048)),
                ('displayurl', models.CharField(default=b'', max_length=2048, null=True)),
                ('tablename', models.CharField(max_length=128)),
                ('owner', models.CharField(default=b'core', max_length=128, null=True)),
                ('description', models.CharField(default=b'', max_length=2048, null=True)),
                ('classname', models.CharField(max_length=128)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Primer',
            fields=[
                ('name', models.CharField(default=b'unknown', max_length=255)),
                ('alias', models.CharField(default=b'unknown', max_length=255)),
                ('description', models.TextField(default=b'')),
                ('obid', models.AutoField(serialize=False, primary_key=True)),
                ('xreflsid', models.CharField(max_length=255)),
                ('createddate', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateTimeField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('datasource', models.ForeignKey(default=1, to='api.DataSource')),
                ('ontology', models.ForeignKey(default=1, to='api.Ontology')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PrimerOb',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255)),
                ('xreflsid', models.CharField(max_length=2048)),
                ('createddate', models.DateField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('group', models.CharField(default=b'NA', max_length=1024)),
                ('recordeddate', models.DateField(auto_now_add=True)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('sequence', models.CharField(max_length=255)),
                ('tail', models.CharField(max_length=255, null=True, blank=True)),
                ('datasource', models.ForeignKey(to='api.DataSource', null=True)),
                ('ontology', models.ForeignKey(default=1, to='api.Ontology')),
                ('primer', models.ForeignKey(to='api.Primer')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PrimerTail',
            fields=[
                ('name', models.CharField(default=b'unknown', max_length=255)),
                ('alias', models.CharField(default=b'unknown', max_length=255)),
                ('description', models.TextField(default=b'')),
                ('obid', models.AutoField(serialize=False, primary_key=True)),
                ('xreflsid', models.CharField(max_length=255)),
                ('createddate', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateTimeField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('datasource', models.ForeignKey(default=1, to='api.DataSource')),
                ('ontology', models.ForeignKey(default=1, to='api.Ontology')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PrimerType',
            fields=[
                ('name', models.CharField(default=b'unknown', max_length=255)),
                ('alias', models.CharField(default=b'unknown', max_length=255)),
                ('description', models.TextField(default=b'')),
                ('obid', models.AutoField(serialize=False, primary_key=True)),
                ('xreflsid', models.CharField(max_length=255)),
                ('createddate', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateTimeField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('datasource', models.ForeignKey(default=1, to='api.DataSource')),
                ('ontology', models.ForeignKey(default=1, to='api.Ontology')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Protein',
            fields=[
                ('name', models.CharField(default=b'unknown', max_length=255)),
                ('alias', models.CharField(default=b'unknown', max_length=255)),
                ('description', models.TextField(default=b'')),
                ('obid', models.AutoField(serialize=False, primary_key=True)),
                ('xreflsid', models.CharField(max_length=255)),
                ('createddate', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateTimeField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('datasource', models.ForeignKey(default=1, to='api.DataSource')),
                ('ontology', models.ForeignKey(default=1, to='api.Ontology')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProteinGelSpotOb',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255)),
                ('xreflsid', models.CharField(max_length=2048)),
                ('createddate', models.DateField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('group', models.CharField(default=b'NA', max_length=1024)),
                ('recordeddate', models.DateField(auto_now_add=True)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('fold_change', models.FloatField(null=True)),
                ('num_uniq_pep', models.IntegerField(null=True)),
                ('spot_no', models.CharField(default=b'unkown', max_length=155)),
                ('acc_num', models.CharField(max_length=255, null=True)),
                ('gene_mgi', models.CharField(max_length=255, null=True)),
                ('prot_ident', models.CharField(max_length=255, null=True)),
                ('theo_pl', models.FloatField(null=True)),
                ('sequest_p', models.FloatField(null=True)),
                ('spot', models.IntegerField(null=True)),
                ('seq_cov', models.FloatField(null=True)),
                ('theo_al', models.FloatField(null=True)),
                ('M_Gel', models.CharField(default=b'-9999', max_length=255)),
                ('descriptor', models.CharField(default=b'', max_length=255)),
                ('week', models.IntegerField(null=True)),
                ('file_name', models.CharField(default=b'', max_length=1024)),
                ('biosample', models.ForeignKey(to='api.BioSample')),
                ('biosubject', models.ForeignKey(blank=True, to='api.BioSubject', null=True)),
                ('datasource', models.ForeignKey(to='api.DataSource', null=True)),
                ('ontology', models.ForeignKey(default=1, to='api.Ontology')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='QuestionnaireOb',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255)),
                ('xreflsid', models.CharField(max_length=2048)),
                ('createddate', models.DateField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('group', models.CharField(default=b'NA', max_length=1024)),
                ('recordeddate', models.DateField(auto_now_add=True)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('att_key', models.CharField(max_length=255)),
                ('att_value', models.CharField(default=None, max_length=4096, null=True)),
                ('att_code', models.CharField(default=None, max_length=255, null=True)),
                ('grp', models.CharField(default=b'', max_length=1024)),
                ('biosubject', models.ForeignKey(blank=True, to='api.BioSubject', null=True)),
                ('datasource', models.ForeignKey(to='api.DataSource', null=True)),
                ('ontology', models.ForeignKey(default=1, to='api.Ontology')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RawImport',
            fields=[
                ('name', models.CharField(default=b'unknown', max_length=255)),
                ('alias', models.CharField(default=b'unknown', max_length=255)),
                ('description', models.TextField(default=b'')),
                ('obid', models.AutoField(serialize=False, primary_key=True)),
                ('xreflsid', models.CharField(max_length=255)),
                ('createddate', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateTimeField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('datasource', models.ForeignKey(default=1, to='api.DataSource')),
                ('ontology', models.ForeignKey(default=1, to='api.Ontology')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RawImportOb',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255)),
                ('xreflsid', models.CharField(max_length=2048)),
                ('createddate', models.DateField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('group', models.CharField(default=b'NA', max_length=1024)),
                ('recordeddate', models.DateField(auto_now_add=True)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('grp', models.IntegerField(default=0)),
                ('att_key', models.CharField(max_length=255)),
                ('att_value', models.CharField(max_length=255)),
                ('datasource', models.ForeignKey(to='api.DataSource', null=True)),
                ('imp', models.ForeignKey(to='api.RawImport')),
                ('ontology', models.ForeignKey(default=1, to='api.Ontology')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SampleMethod',
            fields=[
                ('name', models.CharField(default=b'unknown', max_length=255)),
                ('alias', models.CharField(default=b'unknown', max_length=255)),
                ('description', models.TextField(default=b'')),
                ('obid', models.AutoField(serialize=False, primary_key=True)),
                ('xreflsid', models.CharField(max_length=255)),
                ('createddate', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateTimeField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('datasource', models.ForeignKey(default=1, to='api.DataSource')),
                ('ontology', models.ForeignKey(default=1, to='api.Ontology')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('name', models.CharField(default=b'unknown', max_length=255)),
                ('alias', models.CharField(default=b'unknown', max_length=255)),
                ('description', models.TextField(default=b'')),
                ('obid', models.AutoField(serialize=False, primary_key=True)),
                ('xreflsid', models.CharField(max_length=255)),
                ('createddate', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateTimeField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('common_name', models.CharField(max_length=255)),
                ('datasource', models.ForeignKey(default=1, to='api.DataSource')),
                ('ontology', models.ForeignKey(default=1, to='api.Ontology')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('name', models.CharField(default=b'unknown', max_length=255)),
                ('alias', models.CharField(default=b'unknown', max_length=255)),
                ('description', models.TextField(default=b'')),
                ('obid', models.AutoField(serialize=False, primary_key=True)),
                ('xreflsid', models.CharField(max_length=255)),
                ('createddate', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateTimeField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('datasource', models.ForeignKey(default=1, to='api.DataSource')),
                ('ontology', models.ForeignKey(default=1, to='api.Ontology')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StudyArea',
            fields=[
                ('name', models.CharField(default=b'unknown', max_length=255)),
                ('alias', models.CharField(default=b'unknown', max_length=255)),
                ('description', models.TextField(default=b'')),
                ('obid', models.AutoField(serialize=False, primary_key=True)),
                ('xreflsid', models.CharField(max_length=255)),
                ('createddate', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateTimeField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('wiki', models.CharField(max_length=255)),
                ('datasource', models.ForeignKey(default=1, to='api.DataSource')),
                ('ontology', models.ForeignKey(default=1, to='api.Ontology')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StudyGroup',
            fields=[
                ('name', models.CharField(default=b'unknown', max_length=255)),
                ('alias', models.CharField(default=b'unknown', max_length=255)),
                ('description', models.TextField(default=b'')),
                ('obid', models.AutoField(serialize=False, primary_key=True)),
                ('xreflsid', models.CharField(max_length=255)),
                ('createddate', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateTimeField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('datasource', models.ForeignKey(default=1, to='api.DataSource')),
                ('ontology', models.ForeignKey(default=1, to='api.Ontology')),
                ('species', models.ForeignKey(to='api.Species')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Tissue',
            fields=[
                ('name', models.CharField(default=b'unknown', max_length=255)),
                ('alias', models.CharField(default=b'unknown', max_length=255)),
                ('description', models.TextField(default=b'')),
                ('obid', models.AutoField(serialize=False, primary_key=True)),
                ('xreflsid', models.CharField(max_length=255)),
                ('createddate', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateTimeField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('datasource', models.ForeignKey(default=1, to='api.DataSource')),
                ('ontology', models.ForeignKey(default=1, to='api.Ontology')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Tow',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255)),
                ('xreflsid', models.CharField(max_length=2048)),
                ('createddate', models.DateField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('group', models.CharField(default=b'NA', max_length=1024)),
                ('recordeddate', models.DateField(auto_now_add=True)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('deleted_flag', models.BooleanField(default=False)),
                ('sample_count', models.IntegerField()),
                ('sampler', models.CharField(max_length=10)),
                ('sample_location', models.CharField(max_length=255)),
                ('ph_instrument', models.CharField(default=None, max_length=255, null=True)),
                ('external_assessment_only', models.CharField(default=None, max_length=20, null=True)),
                ('no_comment', models.CharField(default=None, max_length=255, null=True)),
                ('comment', models.TextField(default=None, null=True)),
                ('date_on_deck', models.DateTimeField(default=None, null=True)),
                ('city', models.ForeignKey(to='api.City')),
                ('datasource', models.ForeignKey(to='api.DataSource', null=True)),
                ('instruments', models.ManyToManyField(to='api.Instrument')),
                ('ontology', models.ForeignKey(default=1, to='api.Ontology')),
                ('sample_method', models.ForeignKey(to='api.SampleMethod')),
                ('study', models.ForeignKey(to='api.Study', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('name', models.CharField(default=b'unknown', max_length=255)),
                ('alias', models.CharField(default=b'unknown', max_length=255)),
                ('description', models.TextField(default=b'')),
                ('obid', models.AutoField(serialize=False, primary_key=True)),
                ('xreflsid', models.CharField(max_length=255)),
                ('createddate', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateTimeField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('no', models.IntegerField(default=0)),
                ('datasource', models.ForeignKey(default=1, to='api.DataSource')),
                ('ontology', models.ForeignKey(default=1, to='api.Ontology')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255)),
                ('xreflsid', models.CharField(max_length=2048)),
                ('createddate', models.DateField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('group', models.CharField(default=b'NA', max_length=1024)),
                ('recordeddate', models.DateField(auto_now_add=True)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('orig_trip_id', models.IntegerField()),
                ('user', models.CharField(default=None, max_length=10, null=True, blank=True)),
                ('method', models.CharField(default=None, max_length=255, null=True, blank=True)),
                ('trip_no', models.IntegerField()),
                ('vessel', models.CharField(default=None, max_length=255, null=True, blank=True)),
                ('registration', models.IntegerField(default=None, null=True, blank=True)),
                ('country', django_countries.fields.CountryField(default=None, max_length=2, null=True, blank=True, choices=[('AF', 'Afghanistan'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia, Plurinational State of'), ('BQ', 'Bonaire, Sint Eustatius and Saba'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory'), ('BN', 'Brunei Darussalam'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('CV', 'Cape Verde'), ('KY', 'Cayman Islands'), ('CF', 'Central African Republic'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CG', 'Congo'), ('CD', 'Congo (the Democratic Republic of the)'), ('CK', 'Cook Islands'), ('CR', 'Costa Rica'), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CW', 'Cura\xe7ao'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic'), ('CI', "C\xf4te d'Ivoire"), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands  [Malvinas]'), ('FO', 'Faroe Islands'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French Southern Territories'), ('GA', 'Gabon'), ('GM', 'Gambia (The)'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard Island and McDonald Islands'), ('VA', 'Holy See  [Vatican City State]'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran (the Islamic Republic of)'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IM', 'Isle of Man'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KP', "Korea (the Democratic People's Republic of)"), ('KR', 'Korea (the Republic of)'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', "Lao People's Democratic Republic"), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MK', 'Macedonia (the former Yugoslav Republic of)'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia (the Federated States of)'), ('MD', 'Moldova (the Republic of)'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('MP', 'Northern Mariana Islands'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestine, State of'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RO', 'Romania'), ('RU', 'Russian Federation'), ('RW', 'Rwanda'), ('RE', 'R\xe9union'), ('BL', 'Saint Barth\xe9lemy'), ('SH', 'Saint Helena, Ascension and Tristan da Cunha'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('MF', 'Saint Martin (French part)'), ('PM', 'Saint Pierre and Miquelon'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SX', 'Sint Maarten (Dutch part)'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('GS', 'South Georgia and the South Sandwich Islands'), ('SS', 'South Sudan'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan'), ('SR', 'Suriname'), ('SJ', 'Svalbard and Jan Mayen'), ('SZ', 'Swaziland'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syrian Arab Republic'), ('TW', 'Taiwan (Province of China)'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania, United Republic of'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates'), ('GB', 'United Kingdom'), ('US', 'United States'), ('UM', 'United States Minor Outlying Islands'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela, Bolivarian Republic of'), ('VN', 'Viet Nam'), ('VG', 'Virgin Islands (British)'), ('VI', 'Virgin Islands (U.S.)'), ('WF', 'Wallis and Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe'), ('AX', '\xc5land Islands')])),
                ('captain', models.CharField(default=None, max_length=100, null=True, blank=True)),
                ('first_sailing', models.DateTimeField(default=None, null=True, blank=True)),
                ('last_arrival', models.DateTimeField(default=None, null=True, blank=True)),
                ('deleted', models.CharField(default=b'N', max_length=1, null=True, blank=True)),
                ('datasource', models.ForeignKey(to='api.DataSource', null=True)),
                ('ontology', models.ForeignKey(default=1, to='api.Ontology')),
                ('species', models.ForeignKey(to='api.Species')),
                ('study', models.ForeignKey(to='api.Study', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('name', models.CharField(default=b'unknown', max_length=255)),
                ('alias', models.CharField(default=b'unknown', max_length=255)),
                ('description', models.TextField(default=b'')),
                ('obid', models.AutoField(serialize=False, primary_key=True)),
                ('xreflsid', models.CharField(max_length=255)),
                ('createddate', models.DateTimeField(auto_now_add=True)),
                ('createdby', models.CharField(max_length=255)),
                ('lastupdateddate', models.DateTimeField(auto_now=True)),
                ('lastupdatedby', models.CharField(max_length=50)),
                ('obkeywords', models.TextField()),
                ('statuscode', models.IntegerField(default=1)),
                ('search_index', djorm_pgfulltext.fields.VectorField(default=b'', serialize=False, null=True, editable=False, db_index=True)),
                ('datasource', models.ForeignKey(default=1, to='api.DataSource')),
                ('ontology', models.ForeignKey(default=1, to='api.Ontology')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.AddField(
            model_name='tow',
            name='treatments',
            field=models.ManyToManyField(to='api.Treatment'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='tow',
            name='trip',
            field=models.ForeignKey(to='api.Trip'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='study',
            name='study_area',
            field=models.ForeignKey(to='api.StudyArea'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='study',
            name='study_group',
            field=models.ForeignKey(to='api.StudyGroup'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='rawimportob',
            name='study',
            field=models.ForeignKey(to='api.Study', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='rawimport',
            name='study',
            field=models.ForeignKey(to='api.Study'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='questionnaireob',
            name='study',
            field=models.ForeignKey(to='api.Study', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='proteingelspotob',
            name='study',
            field=models.ForeignKey(to='api.Study', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='primerob',
            name='primer_type',
            field=models.ForeignKey(blank=True, to='api.PrimerType', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='primerob',
            name='study',
            field=models.ForeignKey(to='api.Study', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='mouseweightob',
            name='ontology',
            field=models.ForeignKey(default=1, to='api.Ontology'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='mouseweightob',
            name='study',
            field=models.ForeignKey(to='api.Study', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='mouseweightob',
            name='unit',
            field=models.ForeignKey(to='api.Unit'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='mouseintakeob',
            name='ontology',
            field=models.ForeignKey(default=1, to='api.Ontology'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='mouseintakeob',
            name='study',
            field=models.ForeignKey(to='api.Study', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='mouseintakeob',
            name='unit',
            field=models.ForeignKey(to='api.Unit'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='mousehistologyv2ob',
            name='all_unit',
            field=models.ForeignKey(related_name='all_unit', to='api.Unit', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='mousehistologyv2ob',
            name='biosample',
            field=models.ForeignKey(to='api.BioSample'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='mousehistologyv2ob',
            name='biosubject',
            field=models.ForeignKey(blank=True, to='api.BioSubject', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='mousehistologyv2ob',
            name='datasource',
            field=models.ForeignKey(to='api.DataSource', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='mousehistologyv2ob',
            name='diet',
            field=models.ForeignKey(to='api.Diet', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='mousehistologyv2ob',
            name='ontology',
            field=models.ForeignKey(default=1, to='api.Ontology'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='mousehistologyv2ob',
            name='study',
            field=models.ForeignKey(to='api.Study', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='mousehistologyob',
            name='ontology',
            field=models.ForeignKey(default=1, to='api.Ontology'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='mousehistologyob',
            name='study',
            field=models.ForeignKey(to='api.Study', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='mousehistologyob',
            name='unit',
            field=models.ForeignKey(to='api.Unit'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='markerob',
            name='ontology',
            field=models.ForeignKey(default=1, to='api.Ontology'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='markerob',
            name='study',
            field=models.ForeignKey(to='api.Study', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='labresource',
            name='ontology',
            field=models.ForeignKey(default=1, to='api.Ontology'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='instrument',
            name='ontology',
            field=models.ForeignKey(default=1, to='api.Ontology'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='genotypeob',
            name='ontology',
            field=models.ForeignKey(default=1, to='api.Ontology'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='genotypeob',
            name='study',
            field=models.ForeignKey(to='api.Study', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='genotype',
            name='ontology',
            field=models.ForeignKey(default=1, to='api.Ontology'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='gene',
            name='ontology',
            field=models.ForeignKey(default=1, to='api.Ontology'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='fishob',
            name='ontology',
            field=models.ForeignKey(default=1, to='api.Ontology'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='fishob',
            name='study',
            field=models.ForeignKey(to='api.Study', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='fishob',
            name='trip',
            field=models.ForeignKey(to='api.Trip'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='epigeneticsob',
            name='ontology',
            field=models.ForeignKey(default=1, to='api.Ontology'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='epigeneticsob',
            name='study',
            field=models.ForeignKey(to='api.Study', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='epigeneticsob',
            name='unit',
            field=models.ForeignKey(to='api.Unit'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='diet',
            name='ontology',
            field=models.ForeignKey(default=1, to='api.Ontology'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='crew',
            name='datasource',
            field=models.ForeignKey(default=1, to='api.DataSource'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='crew',
            name='ontology',
            field=models.ForeignKey(default=1, to='api.Ontology'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='city',
            name='datasource',
            field=models.ForeignKey(default=1, to='api.DataSource'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='city',
            name='ontology',
            field=models.ForeignKey(default=1, to='api.Ontology'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='biosubject',
            name='datasource',
            field=models.ForeignKey(default=1, to='api.DataSource'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='biosubject',
            name='ontology',
            field=models.ForeignKey(default=1, to='api.Ontology'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='biosubject',
            name='species',
            field=models.ForeignKey(to='api.Species'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='biosequence',
            name='datasource',
            field=models.ForeignKey(default=1, to='api.DataSource'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='biosequence',
            name='ontology',
            field=models.ForeignKey(default=1, to='api.Ontology'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='biosample',
            name='biosubject',
            field=models.ForeignKey(to='api.BioSubject'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='biosample',
            name='datasource',
            field=models.ForeignKey(default=1, to='api.DataSource'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='biosample',
            name='ontology',
            field=models.ForeignKey(default=1, to='api.Ontology'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='biosample',
            name='tissue',
            field=models.ForeignKey(to='api.Tissue'),
            preserve_default=True,
        ),
    ]
